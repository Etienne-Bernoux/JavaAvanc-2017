package fr.ece.bernoux.Lab6Lambda.Exercice3;

import java.util.function.Consumer;

public interface Seq {
	void forEach(Consumer<Object> consumer);
	default Seq prepend(Object newElement){
			return new Cons(newElement,this);
	}
	static Seq nil() {
		return new NIi();
		
	}
	
	
	public class Cons implements Seq {
		private final Object element;
		private final Seq next;
		
		public Cons(Object element, Seq next) {
			super();
			this.element = element;
			this.next = next;
		}

		@Override
		public void forEach(Consumer<Object> consumer) {
			//We execute the consumer with the element
		consumer.accept(element);
			//We execute for each for the next element
		next.forEach(consumer);
			
		}


	}
	public class NIi implements Seq {

		public NIi() {
			super();
			// TODO Auto-generated constructor stub
		}

		@Override
		public void forEach(Consumer<Object> consumer) {
			
			
		}
	}
}


